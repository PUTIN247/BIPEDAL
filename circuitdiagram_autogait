Nice — I’ll give you a clear, practical **circuit/wiring diagram in text form**, a wiring table, an ASCII-style schematic you can copy into notes, and all required safety/power tips so you can wire up the **ESP32 + PCA9685 + 3 × MG995 (hip,knee,ankle)** system safely and correctly.

If you want, after wiring you can ask me to generate an image (Fritzing-style) or a printable PDF; I can make that next — but first use the textual wiring to verify physically.

---

# Components (what you need)

* ESP32 dev board (30-pin / generic)
* Adafruit PCA9685 / generic 16-channel PWM servo driver board
* 3 × MG995 (hip, knee, ankle)
* Battery pack for servos: **7.4V LiPo (2S)** or a 6V–7.4V DC supply capable of **≥5–10 A** (MG995 can draw ~1–2A each under load)
* USB cable for ESP32 (or separate 5V supply for ESP32)
* Common ground connections / wiring (thick wires)
* Large electrolytic capacitor **1000 µF – 2200 µF, 16V or higher** across servo supply
* Optional: inline fuse (5A) on servo + line
* Optional: logic-level jumper wires, female servo connectors, screw terminal for battery to PCA9685 V+
* Small screwdriver, pliers, heatshrink

---

# PCA9685 board pin meanings (typical)

* **VCC** (logic) — powers PCA9685 logic (connect to ESP32 3.3V)
* **GND** — ground common (connect to ESP32 GND and battery negative)
* **V+ (VServo / VCC servo)** — servo power (connect to battery +)
* **SDA** — I2C SDA (connect to ESP32 SDA pin — e.g., GPIO21)
* **SCL** — I2C SCL (connect to ESP32 SCL pin — e.g., GPIO22)
* **OE or ENABLE** (some boards) — output enable; tie LOW to enable outputs or ensure module defaults to enabled
* **Addr jumpers** — optional I2C address selection if using multiple PCA9685 (default 0x40)

---

# Wire color conventions (recommended)

* **Red** = Battery + (servo power)
* **Black / Brown** = Ground (battery -, PCA9685 GND, ESP32 GND)
* **Orange / Yellow / White** = Servo SIGNAL wires (to PCA9685 channels)
* **Blue** = I2C SDA
* **Green** = I2C SCL

---

# Wiring table (channel mapping used by your code)

| Board / Pin on PCA9685 | Connect to (device)         | Notes                                                                      |
| ---------------------- | --------------------------- | -------------------------------------------------------------------------- |
| V+ (Servo Vcc)         | Battery Positive (+7.4V)    | Use thick wire & fuse; add large electrolytic capacitor across V+ and GND. |
| GND                    | Battery Negative; ESP32 GND | **Common ground required**.                                                |
| VCC (logic)            | ESP32 **3.3 V**             | PCA9685 logic voltage = 3.3V (not 5V).                                     |
| SDA                    | ESP32 SDA (GPIO21)          | Or chosen SDA pin in code.                                                 |
| SCL                    | ESP32 SCL (GPIO22)          | Or chosen SCL pin in code.                                                 |
| Channel 0 (PWM0)       | HIP servo signal wire       | Servo signal (usually white/orange).                                       |
| Channel 1 (PWM1)       | KNEE servo signal wire      |                                                                            |
| Channel 2 (PWM2)       | ANKLE servo signal wire     |                                                                            |

**ESP32 USB** -> connect to laptop for programming/serial (separate from servo battery). Do NOT power servos from ESP32 USB.

---

# Step-by-step wiring (practical)

1. **Power off everything**. Battery disconnected.
2. **Mount PCA9685** on a small proto board or hold securely.
3. **Connect PCA9685 logic VCC to ESP32 3.3V** (ensure PCA9685 board is 3.3V tolerant). If the PCA9685 board has a VCC pin that expects 5V, check documentation — many breakout boards accept 3.3V but confirm.
4. **Connect PCA9685 GND to ESP32 GND** (run a solid common ground).
5. **Connect SDA -> ESP32 GPIO21**, **SCL -> ESP32 GPIO22** (or pins used in your code).
6. **Wire servo signal leads**:

   * Hip servo signal -> PCA9685 channel 0
   * Knee servo signal -> PCA9685 channel 1
   * Ankle servo signal -> PCA9685 channel 2
     The servos usually have 3 wires: **(red = V+, black/brown = GND, orange/white = signal)**. For signal, connect only the signal wire to PCA9685 channel pin; the servo power and ground go to battery and common ground respectively (next step).
7. **Power for servos (battery)**:

   * Connect battery positive **→ PCA9685 V+ (servo power)** terminal.
   * Connect battery negative **→ PCA9685 GND** and **ESP32 GND**.
   * Place a **1000–2200 µF electrolytic** capacitor across V+ and GND at the PCA9685 board terminals.
   * Optionally place a **5A fuse** inline on the battery positive wire.
8. **Confirm PCA9685 OE/EN**: Some boards have an OE (output enable) pin — ensure it's tied LOW (enabled) or left as default (check board docs).
9. **Plug in ESP32 USB** to laptop (for programming). Keep battery off for initial upload if you like, or can have battery on but ensure wiring secure.
10. **Upload code**, open Serial Monitor to confirm.
11. **Turn servo battery ON** once code runs and watch initial homing to 90° ankle etc. Be ready to cut power if any binds or wrong direction.

---

# Simple ASCII schematic

```
    +------USB 5V/PC------+
    |  (ESP32)            |
    |   ESP32             |
    |  [3.3V]-----+       |
    |  [GND]------|-------+-------------------------+
    |  SDA GPIO21 |---+   |                         |
    |  SCL GPIO22 |---|---+                         |
    +-------------+   |                             |
                      |                             |
               +------+----------------------+      |
               | PCA9685 (servo driver)     |      |
               |  VCC (logic) <--- 3.3V ----+------+
               |  GND  <--------------+----+------+
               |  SDA <--- GPIO21     |           |
               |  SCL <--- GPIO22     |           |
               |  V+  <--- Battery +  |           |
               |  OUT0 ---> HIP signal|----(sig)  |
               |  OUT1 ---> KNEE sig  |----(sig)  |
               |  OUT2 ---> ANKLE sig |----(sig)  |
               +----------------------+           |
                        |   |   |                  |
                        |   |   |                  |
Battery + -------------+---+---+------------------+  (to servo red wires)
Battery - (GND) -----------+----------------------+  (to servo black wires and ESP32 GND)
```

---

# Notes on signal/power wiring for MG995

* **MG995 power wires (red)** → connect to battery positive (via PCA9685 V+ terminal or separate terminal block).
* **MG995 ground (black/brown)** → connect to battery negative (common ground).
* **MG995 signal (orange/white)** → connect to PCA9685 channel signal pin (OUT channel).
* DO NOT tie servo + to ESP32 5V or 3.3V.

---

# Recommended battery & ratings

* **7.4V 2200–5000 mAh LiPo** with **>10–20C** rating will supply bursts. For 3 MG995 under load, 5–10A headroom is recommended.
* If testing with many servos later, scale battery accordingly.
* Always use a charger designed for LiPo and a proper safety bag.

---

# Power-up sequence (important)

1. Ensure all wiring is correct and servo horns are free from mechanical bind.
2. Connect ESP32 USB to laptop (optional before battery).
3. Upload code to ESP32.
4. **Turn ON battery to servos last** (after code is running) — this prevents accidental large torque when uploading code and resetting.
5. Observe the servos move to home (code uses `setServoAngle(...)` in `setup()`).
6. If any servo moves wrong direction, power down and adjust offsets/invert in code.

---

# Troubleshooting tips

* If servos twitch or ESP32 resets: check common ground, battery capability, and add the large capacitor.
* If PCA9685 not responding: verify I2C pins, run an I2C scanner sketch to confirm address `0x40`.
* If servo moves opposite direction: either change servo horn mounting or invert angle mapping, e.g. `setServoAngle(channel, 180 - angle);`
* If 0° is mechanically binding: change `hipHome/kneeHome/ankleHome` or use offsets.

---

# Example quick-check checklist before powering

* [ ] All signal wires connected to PCA9685 correct channels
* [ ] PCA9685 VCC -> ESP32 3.3V (logic)
* [ ] PCA9685 V+ -> Battery + (fuse)
* [ ] All grounds connected (battery negative, PCA9685 GND, ESP32 GND)
* [ ] Capacitor across V+ and GND near PCA9685
* [ ] Servo horns free to move
* [ ] Code uploaded to ESP32 with same I2C pins and channel mappings

---

If you want, I can now:

* Produce a **visual wiring diagram (PNG/SVG)** showing the ESP32, PCA9685, battery, and servos with color-coded wires — tell me if you want that image and I’ll create it.
* Or produce a **Fritzing**-style file you can download.

Which of those would you like next?
